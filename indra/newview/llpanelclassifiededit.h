/*
 * @file llpanelclassifiededit.h
 * @brief Classified edit panel
 *
 * Copyright (c) 2014-2022, Cinder Roxley <cinder@sdf.org>
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef LL_PANELCLASSIFIEDEDIT_H
#define LL_PANELCLASSIFIEDEDIT_H

#include "llpanelclassified.h"

class LLFloaterPublishClassified;

class LLPanelClassifiedEdit : public LLPanelClassifiedInfo
{
    LOG_CLASS(LLPanelClassifiedEdit);

  public:
    static LLPanelClassifiedEdit* create();

    ~LLPanelClassifiedEdit() override = default;

    /*virtual*/ BOOL postBuild() override;

    void fillIn(const LLSD& key);

    /*virtual*/ void onOpen(const LLSD& key) override;

    /*virtual*/ void processProperties(void* data, EAvatarProcessorType type) override;

    /*virtual*/ BOOL isDirty() const override;

    /*virtual*/ void resetDirty() override;

    void setSaveCallback(const commit_signal_t::slot_type& cb);

    void setCancelCallback(const commit_signal_t::slot_type& cb);

    /*virtual*/ void resetControls() override;

    bool isNew() { return mIsNew; }

    bool isNewWithErrors() { return mIsNewWithErrors; }

    bool canClose();

    void draw() override;

    void stretchSnapshot();

    U32 getCategory();

    void setCategory(U32 category);

    U32 getContentType();

    void setContentType(U32 content_type);

    bool getAutoRenew();

    S32 getPriceForListing();

  protected:
    LLPanelClassifiedEdit();

    void sendUpdate();

    void enableVerbs(bool enable);

    void enableEditing(bool enable);

    void showEditing(bool show);

    std::string makeClassifiedName();

    void setPriceForListing(S32 price);

    U8 getFlags();

    std::string getLocationNotice();

    bool isValidName();

    void notifyInvalidName();

    void onSetLocationClick();
    void onChange();
    void onSaveClick();

    void doSave();

    void onPublishFloaterPublishClicked();

    void onTexturePickerMouseEnter(LLUICtrl* ctrl);
    void onTexturePickerMouseLeave(LLUICtrl* ctrl);

    void onTextureSelected();

  private:
    bool mIsNew;
    bool mIsNewWithErrors;
    bool mCanClose;

    LLFloaterPublishClassified* mPublishFloater;

    commit_signal_t mSaveButtonClickedSignal;
};


#endif // LL_PANELCLASSIFIEDEDIT_H
